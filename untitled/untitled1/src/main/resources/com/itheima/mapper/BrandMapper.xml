<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
         PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itheima.mapper.BrandMapper">
    <!--
    字段名称和类名不一致时，无法实现自动封装数据
    *resultMap
        1.定义标签
        2.使用resultMap 来代替resultType
        <resultMap id="brandResultMap" type="brand">
            id：完成主键字段的映射
            column：表的列名
            property：实体类的属性名
            result：完成一般字段的映射
            column：表的列名
            property：实体类的属性名

    <result column="brand_name" property="brandName"/>
    <result column="company_name" property="companyName"/>
    </resultMap>

 -->
    <insert id="add"  useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand(brand_name, company_name, ordered, description, status)
        values(#{brandName},#{companyName},#{ordered},#{description},#{status})
    </insert>
    <update id="update">
        update tb_brand
        <set>
            <if test="brandName != null and brandName != ''">
                brand_name = #{brandName},
            </if>
            <if test="companyName != null and companyName != ''">
                company_name = #{companyName},
            </if>
            <if test="ordered != null">
                ordered = #{ordered},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="status != null">
                status = #{status}
            </if>
        </set>
        where id = #{id};
    </update>
    <delete id="deleteById">
        delete from tb_brand where id = #{id};
    </delete>
    <delete id="deleteByIds">
        delete from tb_brand where id in
              <!-- 也可以直接用默认值，array直接放到collection中
             正常来说写法为in（），太丑了就写成open+close-->
        <foreach collection="array" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

    <select id="selectAll"  resultType="brand">
        select
            *
        from tb_brand;
    </select>
    <!--
        ${} 表明或者列名不确定的时候
        #{} 参数传递的时候，避免sql注入的问题
        *特殊字符的处理
        1.转义字符 &lt;   就是<小于号
        2.CDATA区 CD提示
        <![CDATA[
            balabala
        ]]>
    -->

    <select id="selectByCondition" resultType="brand">
        select *
        from tb_brand
        <where>
            <if test="status != null">
               and  status=#{status}
            </if>
            <if test="companyName != null and companyName !=''">
                and company_name like #{companyName}
            </if>
            <if test="brandName !=null and brandName !=''">
                and brand_name like #{brandName};
            </if>
        </where>

<!--    模糊查询     -->
    </select>
    <select id="selectBySingleCondition" resultType="brand">
        select *
        from tb_brand
        where
        <choose><!--相当于sW1tch-->
            <when test="status != null"><!--相当于case-->
                status = #{status}
            </when>
            <when test="companyName != null and companyName !=''"><!--相当于case-->
                company_name like #{companyName}
            </when>
            <when test="brandName !=null and brandName !=''"><!--相当于case-->
                brand_name like #{brandName}
            </when>
            <otherwise>
                1 = 1;
            </otherwise>
        </choose>
    </select>
</mapper>